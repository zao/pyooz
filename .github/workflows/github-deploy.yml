name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  generate_wheels_matrix:
    name: Generate wheels matrix
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set_matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install cibuildwheel
        run: pipx install cibuildwheel
      - id: set_matrix
        run: |
          MATRIX_INCLUDE=$(
            {
              cibuildwheel --print-build-identifiers --platform linux \
              | jq -Rc '{"only": inputs, "os": "ubuntu-latest"}'
            } | jq -sc
          )
          echo ::set-output name=include::"$MATRIX_INCLUDE"
        env:
          CIBW_ARCHS: aarch64


  build_wheels:
    needs: generate_wheels_matrix
    name: Build ${{ matrix.os }} ${{ matrix.only }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        only: [""]
        include: ${{ fromJson(needs.build_wheels_matrix.outputs.include) }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.3
        env:
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "all"
          CIBW_ARCHS_WINDOWS: "AMD64 ARM64"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
